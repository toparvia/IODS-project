corr.sel3 <- PKY2[-unique(col(corr.sel2)[corr.sel2 & row(corr.sel2) != col(corr.sel2)])]
corr <- round(cor(corr.sel3), 2)
ggcorrplot(corr, hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
method="circle",
colors = c("tomato2", "white", "springgreen3"),
title="Correlogram of PKY",
ggtheme=theme_bw)
limit <- quantile(abs(corr),probs = 0.80)
PKY2 <- PKY[-60]
corr.sel2 <- abs(cor(PKY2, use="pairwise.complete.obs")) > limit
corr.sel3 <- PKY2[-unique(col(corr.sel2)[corr.sel2 & row(corr.sel2) != col(corr.sel2)])]
corr <- round(cor(corr.sel3), 2)
ggcorrplot(corr, hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
method="circle",
colors = c("tomato2", "white", "springgreen3"),
title="Correlogram of PKY",
ggtheme=theme_bw)
limit <- quantile(abs(corr),probs = 0.70)
PKY2 <- PKY[-60]
corr.sel2 <- abs(cor(PKY2, use="pairwise.complete.obs")) > limit
corr.sel3 <- PKY2[-unique(col(corr.sel2)[corr.sel2 & row(corr.sel2) != col(corr.sel2)])]
corr <- round(cor(corr.sel3), 2)
ggcorrplot(corr, hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
method="circle",
colors = c("tomato2", "white", "springgreen3"),
title="Correlogram of PKY",
ggtheme=theme_bw)
limit
PKY2 <- PKY[-60]
limit <- quantile(abs(PKY2),probs = 0.70)
PKY2
quantile(PKY2)
limit <- quantile(abs(cor(PKY2)),probs = 0.70)
limit
limit <- quantile(abs(cor(PKY2)),probs = 0.70)
corr.sel2 <- abs(cor(PKY2, use="pairwise.complete.obs")) > limit
corr.sel3 <- PKY2[-unique(col(corr.sel2)[corr.sel2 & row(corr.sel2) != col(corr.sel2)])]
corr <- round(cor(corr.sel3), 2)
ggcorrplot(corr, hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
method="circle",
colors = c("tomato2", "white", "springgreen3"),
title="Correlogram of PKY",
ggtheme=theme_bw)
limit
limit[0,1]
limit[,1]
limit[1]
limit[1,]
str(limit)
limit <- unname(quantile(abs(cor(PKY2)),probs = 0.70))
corr.sel2 <- abs(cor(PKY2, use="pairwise.complete.obs")) > limit
corr.sel3 <- PKY2[-unique(col(corr.sel2)[corr.sel2 & row(corr.sel2) != col(corr.sel2)])]
corr <- round(cor(corr.sel3), 2)
ggcorrplot(corr, hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
method="circle",
colors = c("tomato2", "white", "springgreen3"),
title="Correlogram of PKY",
ggtheme=theme_bw)
limit <- unname(quantile(abs(cor(PKY2)),probs = 0.4))
corr.sel2 <- abs(cor(PKY2, use="pairwise.complete.obs")) > limit
corr.sel3 <- PKY2[-unique(col(corr.sel2)[corr.sel2 & row(corr.sel2) != col(corr.sel2)])]
corr <- round(cor(corr.sel3), 2)
ggcorrplot(corr, hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
method="circle",
colors = c("tomato2", "white", "springgreen3"),
title="Correlogram of PKY",
ggtheme=theme_bw)
limit
abs(cor(PKY2, use="pairwise.complete.obs")) > limit
corr.sel3 <- PKY2[-unique(col(corr.sel2)[corr.sel2 & row(corr.sel2) != col(corr.sel2)])]
corr.sel3
corr.sel2 <- abs(cor(PKY2, use="pairwise.complete.obs")) > 0.4
corr.sel3 <- PKY2[-unique(col(corr.sel2)[corr.sel2 & row(corr.sel2) != col(corr.sel2)])]
corr <- round(cor(corr.sel3), 2)
corr
ggcorrplot(corr, hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
method="circle",
colors = c("tomato2", "white", "springgreen3"),
title="Correlogram of PKY",
ggtheme=theme_bw)
corr.sel3
limit
limit <- unname(quantile(abs(cor(PKY2)),probs = 0.4))
limit
limit <- unname(quantile(abs(cor(PKY2)),probs = 0.1))
limit
limit <- unname(quantile(abs(cor(PKY2)),probs = 0.8))
limit
limit <- unname(quantile(abs(cor(PKY2)),probs = 0.95))
limit
corr.sel2 <- abs(cor(PKY2, use="pairwise.complete.obs")) > 0.4
corr.sel3 <- PKY2[-unique(col(corr.sel2)[corr.sel2 & row(corr.sel2) != col(corr.sel2)])]
corr <- round(cor(corr.sel3), 2)
ggcorrplot(corr, hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
method="circle",
colors = c("tomato2", "white", "springgreen3"),
title="Correlogram of PKY",
ggtheme=theme_bw)
corr.sel2 <- abs(cor(PKY2, use="pairwise.complete.obs")) > limit
corr.sel3 <- PKY2[-unique(col(corr.sel2)[corr.sel2 & row(corr.sel2) != col(corr.sel2)])]
corr <- round(cor(corr.sel3), 2)
ggcorrplot(corr, hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
method="circle",
colors = c("tomato2", "white", "springgreen3"),
title="Correlogram of PKY",
ggtheme=theme_bw)
corr.sel2 <- abs(cor(PKY2, use="pairwise.complete.obs")) < limit
corr.sel3 <- PKY2[-unique(col(corr.sel2)[corr.sel2 & row(corr.sel2) != col(corr.sel2)])]
corr <- round(cor(corr.sel3), 2)
ggcorrplot(corr, hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
method="circle",
colors = c("tomato2", "white", "springgreen3"),
title="Correlogram of PKY",
ggtheme=theme_bw)
corr.sel2 <- abs(cor(PKY2, use="pairwise.complete.obs")) > 0.4
corr.sel3 <- PKY2[-unique(col(corr.sel2)[corr.sel2 & row(corr.sel2) != col(corr.sel2)])]
corr <- round(cor(corr.sel3), 2)
ggcorrplot(corr, hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
method="circle",
colors = c("tomato2", "white", "springgreen3"),
title="Correlogram of PKY",
ggtheme=theme_bw)
cor(PKY2, use="pairwise.complete.obs")
summary(cor(PKY2, use="pairwise.complete.obs"))
correlations <- vapply(
PKY[, c(-60)],
function(x)
{
cor(PKY[, 59], x)
},
numeric(1)
)
plot(correlations[-59])
corr.sel2 <- abs(cor(PKY2, use="pairwise.complete.obs")) > 0.4
corr.sel2
corr.sel2 <- abs(cor(PKY2, use="pairwise.complete.obs")) > 0.2
corr.sel3 <- PKY2[-unique(col(corr.sel2)[corr.sel2 & row(corr.sel2) != col(corr.sel2)])]
corr <- round(cor(corr.sel3), 2)
ggcorrplot(corr, hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
method="circle",
colors = c("tomato2", "white", "springgreen3"),
title="Correlogram of PKY",
ggtheme=theme_bw)
abs(cor(PKY2, use="pairwise.complete.obs"))
abs(cor(PKY2, use="pairwise.complete.obs")) > 0.2
summary(abs(cor(PKY2, use="pairwise.complete.obs")) > 0.2)
plot(abs(correlations[-59]))
abs(correlations[-59])
cor.sel2 <-abs(correlations[-59]) > 0.2
plot(cor.sel2)
corr.sel3 <- PKY2[-unique(col(corr.sel2)[corr.sel2 & row(corr.sel2) != col(corr.sel2)])]
plot(corr.sel3)
corr.sel3
corr.sel2
cor.sel2
summary(cor.sel2)
corr.sel2 <- abs(cor(PKY2, use="pairwise.complete.obs")) > 0.2
corr.sel3 <- PKY2[-unique(col(corr.sel2)[corr.sel2 & row(corr.sel2) != col(corr.sel2)])]
corr.sel3
corr.sel2 <- abs(cor(PKY2, use="pairwise.complete.obs")) > 0.1
corr.sel3 <- PKY2[-unique(col(corr.sel2)[corr.sel2 & row(corr.sel2) != col(corr.sel2)])]
corr <- round(cor(corr.sel3), 2)
corr
corr.sel2 <- abs(cor(PKY2, use="pairwise.complete.obs")) > 0.9
corr.sel3 <- PKY2[-unique(col(corr.sel2)[corr.sel2 & row(corr.sel2) != col(corr.sel2)])]
corr <- round(cor(corr.sel3), 2)
corr
cor.sel2 <-abs(correlations[-59]) > 0.9
corr.sel3 <- PKY2[-unique(col(corr.sel2)[corr.sel2 & row(corr.sel2) != col(corr.sel2)])]
corr <- round(cor(corr.sel3), 2)
corr
cor.sel2 <-abs(correlations[-59]) > 0.1
corr.sel3 <- PKY2[-unique(col(corr.sel2)[corr.sel2 & row(corr.sel2) != col(corr.sel2)])]
corr.sel2 <-abs(correlations[-59]) > 0.1
corr.sel3 <- PKY2[-unique(col(corr.sel2)[corr.sel2 & row(corr.sel2) != col(corr.sel2)])]
corr <- round(cor(corr.sel3), 2)
corr.sel3
corr.sel2 <- abs(cor(PKY2, use="pairwise.complete.obs")) > 0.4
corr.sel3 <- PKY2[-unique(col(corr.sel2)[corr.sel2 & row(corr.sel2) != col(corr.sel2)])]
corr <- round(cor(corr.sel3), 2)
corr
abs(cor(PKY2, use="pairwise.complete.obs")) > 0.4
abs(cor(PKY2, use="pairwise.complete.obs"))
correlations <- cor(PNY[,c(1:59)], use="pairwise", method="spearman")
correlations <- cor(PKY[,c(1:59)], use="pairwise", method="spearman")
correlations
hist(correlations)
corr.sel2 <-abs(correlations[-59]) > 0.1
corr.sel2
corr.sel2 <-abs(correlations[-59])
corr.sel2
install.packages("caret")
library(caret)
?findCorrelation
R1 <- structure(c(1, 0.86, 0.56, 0.32, 0.85, 0.86, 1, 0.01, 0.74, 0.32,
0.56, 0.01, 1, 0.65, 0.91, 0.32, 0.74, 0.65, 1, 0.36,
0.85, 0.32, 0.91, 0.36, 1),
.Dim = c(5L, 5L))
R1
colnames(R1) <- rownames(R1) <- paste0("x", 1:ncol(R1))
R1
findCorrelation(R1, cutoff = .6, exact = FALSE)
R1[4]
R1[,4]
R1[,3]
R1[,1]
R1[,2]
findCorrelation(R1, cutoff = .6, exact = FALSE, verbose=TRUE)
correlations
View(correlations)
findCorrelation(correlations, cutoff = .6, exact = FALSE)
correlations[correlations.selected]
correlations.selected <- findCorrelation(correlations, cutoff = .6, exact = FALSE)
correlations[correlations.selected]
teest <- correlations[correlations.selected]
colnames(teest) <- names(correlations[correlations.selected])
teest
correlations
names(correlations)
colnames(correlations)
colnames(teest) <- colnames(correlations[correlations.selected])
teest
colnames(correlations[correlations.selected])
correlations[correlations.selected]
names(correlations[correlations.selected])
?subset
colnames(correlations)
colnames(correlations)[correlations.selected]
colnames(teest) <- colnames(correlations)[correlations.selected]
teest
teest <- data.frame(correlations[correlations.selected])
teest
colnames(teest) <- colnames(correlations)[correlations.selected]
teest <- as.data.frame(correlations[correlations.selected])
teest
teest <-  matrix(pairs(correlations[correlations.selected]), ncol=length(correlations[correlations.selected]), byrow=TRUE)
pairs(correlations[correlations.selected])
teest <-  matrix((correlations[correlations.selected]), ncol=length(correlations[correlations.selected]), byrow=TRUE)
teest
colnames(teest) <- colnames(correlations)[correlations.selected]
teest
correlations
teest <-  matrix((correlations[correlations.selected,]), ncol=length(correlations[correlations.selected]), byrow=TRUE)
teest
colnames(teest) <- colnames(correlations)[correlations.selected]
teest
?findCorrelation
R1 <- structure(c(1, 0.86, 0.56, 0.32, 0.85, 0.86, 1, 0.01, 0.74, 0.32,
0.56, 0.01, 1, 0.65, 0.91, 0.32, 0.74, 0.65, 1, 0.36,
0.85, 0.32, 0.91, 0.36, 1),
.Dim = c(5L, 5L))
colnames(R1) <- rownames(R1) <- paste0("x", 1:ncol(R1))
R1
findCorrelation(R1, cutoff = .6, exact = FALSE)
R2 <- diag(rep(1, 5))
R2[2, 3] <- R2[3, 2] <- .7
R2[5, 3] <- R2[3, 5] <- -.7
R2[4, 1] <- R2[1, 4] <- -.67
corrDF <- expand.grid(row = 1:5, col = 1:5)
corrDF$correlation <- as.vector(R2)
levelplot(correlation ~ row + col, corrDF)
findCorrelation(R2, cutoff = .65, verbose = TRUE)
findCorrelation(R2, cutoff = .99, verbose = TRUE)
correlations <- abs(cor(PKY2, use="pairwise.complete.obs"))
correlations.selected <- findCorrelation(correlations, cutoff = .6, exact = FALSE)
correlations.selected
PKY2[correlations.selected]
PKY2[c(correlations.selected,59)]
correlations2 <- vapply(
PKY[, c(-60)],
function(x)
{
cor(PKY[, 59], x)
},
numeric(1)
)
plot(abs(correlations[-59]))
library(caret) #findCorrelation algorithm
PKY2 <- PKY[-60]
correlations <- abs(cor(PKY2, use="pairwise.complete.obs"))
correlations.selected <- findCorrelation(correlations, cutoff = .2, exact = FALSE)
PKY2[c(correlations.selected,59)]
corr <- PKY2[c(correlations.selected,59)]
ggcorrplot(corr, hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
method="circle",
colors = c("tomato2", "white", "springgreen3"),
title="Correlogram of PKY",
ggtheme=theme_bw)
corr
correlations.selected <- findCorrelation(correlations, cutoff = .3, exact = FALSE)
corr <- PKY2[c(correlations.selected,59)]
corr
correlations
plot(correlations)
correlations.selected <- findCorrelation(correlations, cutoff = .9, exact = FALSE)
corr <- PKY2[c(correlations.selected,59)]
ggcorrplot(corr, hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
method="circle",
colors = c("tomato2", "white", "springgreen3"),
title="Correlogram of PKY",
ggtheme=theme_bw)
corr
corr <- PKY2[c(correlations.selected,59),]
corr
corr <- PKY2[,c(correlations.selected,59)]
corr
corr <- PKY2[c(correlations.selected,59)]
corr
correlations.selected <- findCorrelation(correlations, cutoff = .2, exact = FALSE)
correlations.selected
unique(correlations)
unique(correlations.selected)
corr
corr <- PKY2[c(correlations.selected)]
corr
correlations.selected <- findCorrelation(correlations, cutoff = .3, exact = FALSE)
corr <- PKY2[c(correlations.selected)]
ggcorrplot(corr, hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
method="circle",
colors = c("tomato2", "white", "springgreen3"),
title="Correlogram of PKY",
ggtheme=theme_bw)
correlations.selected <- findCorrelation(correlations, cutoff = .7, exact = FALSE)
corr <- PKY2[c(correlations.selected)]
corr
corr <- PKY2[c(correlations.selected)]
ggcorrplot(corr, hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
method="circle",
colors = c("tomato2", "white", "springgreen3"),
title="Correlogram of PKY",
ggtheme=theme_bw)
corr
corr <- cor(PKY2[c(correlations.selected)])
corr
ggcorrplot(corr, hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
method="circle",
colors = c("tomato2", "white", "springgreen3"),
title="Correlogram of PKY",
ggtheme=theme_bw)
corr <- cor(PKY2[c(correlations.selected,59)])
ggcorrplot(corr, hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
method="circle",
colors = c("tomato2", "white", "springgreen3"),
title="Correlogram of PKY",
ggtheme=theme_bw)
findCorrelation()
?findCorrelation
correlations.selected <- findCorrelation(correlations, cutoff = .7, exact = TRUE)
corr <- cor(PKY2[c(correlations.selected,59)])
ggcorrplot(corr, hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
method="circle",
colors = c("tomato2", "white", "springgreen3"),
title="Correlogram of PKY",
ggtheme=theme_bw)
g = ggpairs(PKY,columns = c(correlations.selected,59), lower = list(continuous = my_fn))
my_fn <- function(data, mapping, ...){
p <- ggplot(data = data, mapping = mapping) +
geom_point() +
geom_smooth(method=loess, fill="red", color="red", ...) +
geom_smooth(method=lm, fill="blue", color="blue", ...)
p
}
g = ggpairs(PKY,columns = c(correlations.selected,59), lower = list(continuous = my_fn))
g
MyVars <- PKY[c(1:10,59)]
Mypairs(MyVars)
Mydotplot(MyVars)
g = ggpairs(PKY,columns = c(correlations.selected,59), lower = list(continuous = my_fn))
g
warnings()
?ggpairs
PNY$Da+PNY$Db
PKY$Da+PKY$Db
install.packages("datatable")
install.packages("data.table")
dt <- data.table(PKY)
library(data.table)
dt <- data.table(PKY)
dt
dt[1] +dt[2]
dt <- data.table(PKY)[, .(Da + Db, Dd)]
dt
attitude <- data.table(PKY)[, .(Da+Db+Dc+Dd+De+Df+Dg+Dh+Di+Dj)]
attitutde
attitude
attitude <- data.table(PKY)[, .((Da+Db+Dc+Dd+De+Df+Dg+Dh+Di+Dj))/10]
attitude <- data.table(PKY)[, .(Da+Db+Dc+Dd+De+Df+Dg+Dh+Di+Dj)/10]
attitude <- data.table(PKY)[, .(Da+Db+Dc+Dd+De+Df+Dg+Dh+Di+Dj)]
attitude
attitude/10
gender      <- data.table(PKY$gender)
age         <- data.table(PKY$age)
age         <- data.table(PKY$Age)
attitude    <- data.table(PKY)[, .(Da+Db+Dc+Dd+De+Df+Dg+Dh+Di+Dj)]
attitude    <- attitude/10
deep        <- data.table(PKY)[, .(d_sm+d_ri+d_ue)]
deep        <- deep/3
gender      <- data.table(PKY$gender)
age         <- data.table(PKY$Age)
attitude    <- data.table(PKY)[, .(Da+Db+Dc+Dd+De+Df+Dg+Dh+Di+Dj)]
attitude    <- attitude/10
deep        <- data.table(PKY)[, .(D03+D11+D19+D27+D07+D14+D22+D30+D06+D15+D23+D31)]
deep        <- deep/12
surf        <- data.table(PKY)[, .(SU02+SU10+SU18+SU26+SU05+SU13+SU21+SU29+SU08+SU16+SU24+SU32)]
surf        <- surf/12
stra        <- data.table(PKY)[, .(ST01+ST09+ST17+ST25+ST04+ST12+ST20+ST28)]
stra        <- stra/8
learn2014   <- merge(gender, age, attitude, deep, stra, surf)
?merge
DT_cmb <- gender[age,][attitude,]
Reduce(function(...) merge(..., all = TRUE),
list(gender, age, attitude, deep, stra, surf))
Reduce(function(...) merge(..., all = TRUE, by = "Var1"),
list(gender, age, attitude, deep, stra, surf))
Reduce(function(...) merge(..., all = TRUE, by = "age"),
list(gender, age, attitude, deep, stra, surf))
merged.table <- Reduce(function(...) merge(..., all=T), list(gender, age, attitude, deep, stra, surf))
DT[, c("gender", "age", "attitude", "deep", "stra", "surf") := myfun(y,v)]
gender[, c("age", "attitude", "deep", "stra", "surf") := myfun(y,v)]
gender[, c("age", "attitude", "deep", "stra", "surf")]
cbind(gender,age)
dt <- data.table(cbind(gender, age, attitude, deep, stra, surf))
dt
learn2014   <- data.table(cbind(gender, age, attitude, deep, stra, surf))
colnames(learn2014) <- c("age", "attitude", "deep", "stra", "surf")
colnames(learn2014) <- c("gender", "age", "attitude", "deep", "stra", "surf")
learn2014
dim(learn2014)
points      <- data.table(PKY$points)
learn2014   <- data.table(cbind(gender, age, attitude, deep, stra, surf, points))
points      <- data.table(PKY$Points)
learn2014   <- data.table(cbind(gender, age, attitude, deep, stra, surf, points))
colnames(learn2014) <- c("gender", "age", "attitude", "deep", "stra", "surf", "points")
learn2014
learn2014[points >0]
mean(deep)
deep
mean(deep[,1])
mean(deep[1,])
deep[,print(.SD), by = V1]
deep[,print(.SD), by = deep]
deep[,print(.SD)]
mean(deep)
deep(1)
deep[1]
deep[,1]
mean(deep[,1])
deep[, sum(V1)]
deep[, mean(V1)]
deep/deep[, mean(V1)]
summary(learn2014)
g = ggpairs(PKY,columns = c(2:7), lower = list(continuous = my_fn))
g
g = ggpairs(learn2014,columns = c(2:7), lower = list(continuous = my_fn))
g
