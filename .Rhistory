library(ggolot2)
library(ggplot2)
?ggpairs
??ggpairs
#working directory to source file location
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #works in Rstudio only
#Some functions for data exploration, courtesy of Highland statistics
source("HighstatLibV10.R")
#libraries used
library(readr)
library(ggplot2)
library(GGally)
library(ggcorrplot)
library(caret)
#read data
url <- "http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets"
# web address for math class data
url_math <- paste(url, "student-mat.csv", sep = "/")
# read the math class questionaire data into memory
math <- read.table(url_math, sep = ";" , header=TRUE)
# web address for portuguese class data
url_por <- paste(url, "student-por.csv", sep ="/")
# read the portuguese class questionaire data into memory
por <- read.table(url_por, sep = ";", header = TRUE)
library(data.table)
url <- "http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets"
# web address for math class data
url_math <- paste(url, "student-mat.csv", sep = "/")
# read the math class questionaire data into memory
math <- data.table(url_math, sep = ";" , header=TRUE)
# web address for portuguese class data
url_por <- paste(url, "student-por.csv", sep ="/")
# read the portuguese class questionaire data into memory
por <- data.table(url_por, sep = ";", header = TRUE)
test <- math[por]
setkey(school, sex, age, address, famsize, Pstatus, Medu, Fedu, Mjob, Fjob, reason, nursery,internet)
setkey(math, por)
por <- data.table(url_por, sep = ";", header = TRUE)
math <- data.table(url_math, sep = ";" , header=TRUE)
setkey(math, por)
?setkey
View(por)
View(math)
url <- "http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets"
url_math <- paste(url, "student-mat.csv", sep = "/")
math <- data.table(url_math, sep = ";" , header=TRUE)
url_por <- paste(url, "student-por.csv", sep ="/")
por <- data.table(url_por, sep = ";", header = TRUE)
url <- "http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets"
url_math <- paste(url, "student-mat.csv", sep = "/")
math <- read.table(url_math, sep = ";" , header=TRUE)
url_por <- paste(url, "student-por.csv", sep ="/")
por <- read.table(url_por, sep = ";", header = TRUE)
setkey(math, por)
pora <- data.table(por)
matha <- data.table(math)
setkey(math, por)
setkey(matha, pora)
pora
str(pora)
pora <- setDT(por)
matha <- setDT(math)
setkey(matha, pora)
pora
str(pora)
pora <- setDT(as.data.frame(por))
pora
View(pora)
summary(pora)
library(data.table)
setkey(matha, pora)
pora <- as.data.table(por)
matha <- as.data.table(math)
setkey(matha, pora)
pora <- as.data.table(por)
matha <- as.data.table(math)
setkey(pora, school)
setkey(matha, school)
test <- matha[pora]
test <- matha[pora, allow.cartesian=TRUE]
test
is.na(test)
sum(is.na(test))
keys <- c("school", "sex", "age", "address", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery","internet")
test[,keys]
test[,..keys]
setkey(pora, keys)
setkey(pora, ..keys)
setkey(pora, school, sex, age, address, famsize, Pstatus, Medu, Fedu, Mjob, Fjob, reason, nursery,internet)
setkey(matha, school, sex, age, address, famsize, Pstatus, Medu, Fedu, Mjob, Fjob, reason, nursery,internet)
test <- matha[pora]
test <- pora[matha]
test
sum(is.na(test))
test2 <- test[!na]
test2 <- test[!NA]
dim(test2)
merge(x=pora, y=matha, by.x=keys)
merge(x=pora, y=matha, by=keys)
test3 <- merge(x=pora, y=matha, by=keys)
PM <- merge(x=pora, y=matha, by=keys)
sum(is.na(PM))
library(dplyr)
alc <- select(por, one_of(keys))
alc <- select(PM, one_of(keys))
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
keys=join_by
join_by <- keys
alc <- select(PM, one_of(keys))
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
notjoined_columns
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(math_por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column  vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(PM, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column  vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
alc
dim(alc)
notjoined_columns <- colnames(PM)[!colnames(PM) %in% join_by]
alc <- select(PM, one_of(keys))
notjoined_columns <- colnames(PM)[!colnames(PM) %in% join_by]
notjoined_columns
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(PM, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column  vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
dim(alc)
notjoined_columns <- colnames(por)[!colnames(por) %in% join_by]
notjoined_columns
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(PM, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column  vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
alc
dim(alc)
alc <- select(PM, one_of(keys))
notjoined_columns <- colnames(por)[!colnames(por) %in% join_by]
notjoined_columns
join_by <- keys
alc <- select(PM, one_of(keys))
alc
PM <- merge(x=pora, y=matha, by=keys)
alc <- select(PM, one_of(keys))
notjoined_columns
column_name
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column  vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(PM, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column  vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
notjoined_columns
PM2 <- as.data.frame(PM)
notjoined_columns <- colnames(por)[!colnames(por) %in% join_by]
notjoined_columns
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(PM2, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column  vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
two_columns
first_column
colnames(alc)
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(PM2, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column  vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
column_name
two_columns <- select(PM2, starts_with(column_name))
two_columns
head(PM2)
colnames(PM2)
first_column
